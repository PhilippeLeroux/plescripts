#!/bin/bash
# vim: ts=4:sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/vmlib.sh
. ~/plescripts/usagelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset		vm_name=undef
typeset		os_type=undef

typeset		NIC=hostonly
typeset		host_only_adapter=$hostifname
typeset	-i	memory_gb=$(( 2048 / 1024 ))
typeset	-i	cpus=2
typeset	-i	disk_size_gb=$(( 32768 / 1024 ))

typeset	-r	ME=$0
typeset	-r	PARAMS="$*"

add_usage "-vm_name=name"							"Virtual machine name."
add_usage "-os_type=type"							"Your OS type."
add_usage "[-nat]"									"NIC : NAT rather than host only."
add_usage "[-host_only_adapter=$host_only_adapter]"	"Adapter name, adapter must exists."
add_usage "[-disk_size_gb=$disk_size_gb]"			"Disk size Gb."
add_usage "[-memory_gb=$memory_gb]"					"Memory size Gb."
add_usage "[-cpus=$cpus]"							"Number of CPU."

typeset	-r	str_usage=\
"Usage :
$ME
$(print_usage)

For OS type execute :
$ VBoxManage list ostypes | grep -iE \"^ID:.*YOUR_OS_NAME\"  | awk '{ print \$2 }'

Example :
$ VBoxManage list ostypes | grep -iE \"^ID:.*ubuntu\"  | awk '{ print \$2 }'
Ubuntu
Ubuntu_64
"

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			shift
			;;

		-vm_name=*)
			vm_name=${1##*=}
			shift
			;;

		-os_type=*)
			os_type=${1##*=}
			shift
			;;

		-nat)
			NIC=nat
			shift
			;;

		-host_only_adapter=*)
			host_only_adapter=${1##*=}
			shift
			;;

		-cpus=*)
			cpus=${1##*=}
			shift
			;;

		-memory_gb=*)
			memory_gb=${1##*=}
			shift
			;;

		-h|-help|help)
			info "$str_usage"
			LN
			exit 1
			;;

		*)
			error "Arg '$1' invalid."
			LN
			info "$str_usage"
			exit 1
			;;
	esac
done

exit_if_param_undef vm_name	"$str_usage"
exit_if_param_undef os_type	"$str_usage"

if vm_exists $vm_name
then
	error "VM $vm_name already exists."
	LN
	exit 1
fi

if [ $NIC == hostonly ] && ! VBoxManage list -l hostonlyifs	\
											| grep -q $host_only_adapter
then
	error "Adapter $host_only_adapter not exists."
	LN
	exit 1
fi

line_separator
info "Create VM $vm_name"
exec_cmd VBoxManage createvm	--name $vm_name --basefolder \"$vm_path\"	\
								--groups \"/Desktop d√©mo\"					\
								--register
LN

line_separator
info "Global configuration :"
exec_cmd VBoxManage modifyvm $vm_name --ostype $os_type
exec_cmd VBoxManage modifyvm $vm_name --acpi on
exec_cmd VBoxManage modifyvm $vm_name --ioapic on
exec_cmd VBoxManage modifyvm $vm_name --vram 12
exec_cmd VBoxManage modifyvm $vm_name --cpus $cpus
exec_cmd VBoxManage modifyvm $vm_name --rtcuseutc on
exec_cmd VBoxManage modifyvm $vm_name --largepages on
[ "$hpet" == on ] && exec_cmd VBoxManage modifyvm $vm_name --hpet on || true
LN

line_separator
info "VM memory : ${memory_gb}Gb."
exec_cmd VBoxManage modifyvm $vm_name --memory $(( memory_gb * 1024 ))
LN

line_separator
info "Add Network Interface Card."
exec_cmd VBoxManage modifyvm $vm_name --nic1 $NIC
if [ $NIC == hostonly ]
then
	exec_cmd VBoxManage modifyvm $vm_name --hostonlyadapter1 $host_only_adapter
fi
exec_cmd VBoxManage modifyvm $vm_name --nictype1 virtio
exec_cmd VBoxManage modifyvm $vm_name --cableconnected1 on
LN

line_separator
info "Create and attach disk, size : ${disk_size_gb}Gb."
exec_cmd VBoxManage createhd	--filename \"$vm_path/$vm_name/$vm_name.vdi\"	\
								--size $(( disk_size_gb * 1024 ))

exec_cmd VBoxManage storagectl $vm_name	--name SATA --add SATA					\
										--controller IntelAhci --portcount 10

exec_cmd VBoxManage storageattach $vm_name						\
									--storagectl SATA --port 0	\
									--device 0 --type hdd		\
									--medium \"$vm_path/$vm_name/$vm_name.vdi\"
LN

line_separator
info "To attach ISO."
exec_cmd VBoxManage storagectl $vm_name	--name IDE --add IDE	\
										--controller PIIX4 --portcount 2
LN

HISTCONTROL=ignoreboth:erasedups
HISTSIZE=10000
HISTFILESIZE=10000

## Reset to normal:
NORM="\033[0m"

## Colors:
BLACK="\033[0;30m"
GRAY="\033[1;30m"
RED="\033[0;31m"
LRED="\033[1;31m"
GREEN="\033[0;32m"
LGREEN="\033[1;32m"
YELLOW="\033[0;33m"
LYELLOW="\033[1;33m"
BLUE="\033[0;34m"
LBLUE="\033[1;34m"
PURPLE="\033[0;35m"
PINK="\033[1;35m"
CYAN="\033[0;36m"
LCYAN="\033[1;36m"
LGRAY="\033[0;37m"
WHITE="\033[1;37m"

## Backgrounds
BLACKB="\033[0;40m"
REDB="\033[0;41m"
GREENB="\033[0;42m"
YELLOWB="\033[0;43m"
BLUEB="\033[0;44m"
PURPLEB="\033[0;45m"
CYANB="\033[0;46m"
GREYB="\033[0;47m"

## Attributes:
UNDERLINE="\033[4m"
BOLD="\033[1m"
INVERT="\033[7m"

#	======================================================================
#	Ajout de mes scripts dans le PATH
export PATH=$PATH:~/plescripts/shell

#	======================================================================
#	Permet de définir le serveur par défaut.
#	Les scripts shell 'interactifs' utilisent le fichier file_id_db quand
#	ils ne recoivent pas d'arguments.

export file_id_db=/tmp/id_db
export ID_DB=undef

function set_db
{
	export ID_DB=$(tr [:upper:] [:lower:] <<< "$1")
	if [ x"$ID_DB" = x ] || [ "$ID_DB" = undef ]
	then
		export ID_DB=undef
		rm $file_id_db >/dev/null 2>&1
		return 0
	fi

	echo "$ID_DB" > $file_id_db

	if [ ! -d ~/plescripts/database_servers/$ID_DB ]
	then
		echo "Server id $ID_DB not exists"
	fi
}

[ -f $file_id_db ] && ID_DB=$(cat $file_id_db)

# Copié de plelib.sh
function fmt_seconds # $1 seconds
{
	typeset -ri seconds=$1

	typeset -i minutes=$seconds/60

	if [ $minutes -eq 0 ]
	then
		printf "%ds\n" $seconds
	elif [ $minutes -lt 60 ]
	then
		typeset -i modulo=$(( seconds % 60 ))
		printf "%dmn%02ds\n" $minutes $modulo
	else
		typeset -i hours=$minutes/60
		typeset -i rem_mn=$(( minutes - hours*60 ))
		typeset -i rem_sec=$(( seconds - (hours*60*60 + rem_mn*60) ))
		printf "%dh%02dmn%02ds\n" $hours $rem_mn $rem_sec
	fi
}

function timer_start {
	timer=${timer:-$SECONDS}
}

function timer_stop {
	timer_show=$(fmt_seconds $(( SECONDS -  timer )))
	unset timer
}

trap 'timer_start' DEBUG

if [ "$PROMPT_COMMAND" == "" ]
then
	PROMPT_COMMAND="timer_stop"
else
	PROMPT_COMMAND="$PROMPT_COMMAND; timer_stop"
fi

#	======================================================================
#	Mom prompt
if [ $(hostname -s) == kangs ]
then
	export PS1="[\h<<\${ID_DB}>>:\${timer_show}:\W]\$ "
else
	export PS1="[\u@\h:\${timer_show}:\W]\$ "
fi

#	======================================================================
#	Divers :
export EDITOR=vi

alias root='with root'
alias grid='with grid'
alias oracle='with oracle'

alias empty_swap='sudo swapoff -a; sudo swapon -a'

#	dark | light
export GVIM_COLORSCHEME=light
export VIM_COLORSCHEME=light

#	Alias Virtual Box
alias vb=VBoxManage
alias vblist='VBoxManage list'
alias vbvminfo='VBoxManage showvminfo'
